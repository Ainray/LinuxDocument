ssh::
        + remote host as ssh server, local host as client
        + local save private key, remote save public key in "authorized_keys" file

        + generate key in client

            ssh-keygen -t rsa [ -b 4096] [-p '<passwd>'] -C "Debian"

        + copy public key to server 

            # copy ssh key if shh login to some terminal
            ssh-copy-id <username>@<host> 

            # when without ssh-copy-id command installed,
            ssh inray@192.20.16.1 "umask 077; test -d .ssh || mkdir .ssh"
            cat ~/.ssh/is_rsa.pub | ssh inray@192.20.16.1 "cat >> .ssh/authorized_keys"

            # scp
            scp .ssh/id_rsa.pub  inray@remote:/home/someone/.ssh/



        After delivery public key to remote server, test it by 

            ssh inray@192.20.16.1

        or copy a file by
            
            touch test.txt
            scp test.txt inray@192.20.16.1:/tmp/

change key::

        RSA key passphrase change
            
            ssh-keygen -p -f ~/.ssh/id_rsa

scp/sftp/rsync without passphrase entering::
    
            eval $(ssh-agent) 
            ssh-add

        + 

file systems::
        + id_rsa, private key
        + id_rsa.pub, public key
    authorized_keys
    config
    known_hosts


tricks::
    shutdown remote system on ssh:

         echo "shutdown -h now" |at now

    This command protect the process doing "shutdown -h now" from the termination of ssh.

ssh service sshd configuration::
        Check configuration by 
                
                /usr/sbin/sshd -t 

        Disable root login

                #PermitRootLogin prohibit-password
                PermitRootLogin no
            
        Disable password authentication.

               PasswordAuthentication no
               
        Disable forwarding
        
               AllowTcpForwarding no
	       X11Forwarding no

	Specify accounts
	        
	        AllowUsers inray
	        DenyUsers Foo Bar
	        
	        sudo groupadd -r sshusers
	        usermod -a -G sshusers inray
	        AllowGroups sshusers #in /etc/ssh/sshd_config

	Number of total simultaneous pending( not yet authorized) login connections

	        MaxStartups 2:30:10
	    # allow two pending connections, and 3rd-10th connection the system will
	    # start randomly dropping connections from 30% up to 100% at the 10th simultaneous connection.
	    # pending connections means unauthorized (e.g., if password authorization is allowed, when
	    # someone request ssh connection to the server but still not enter password.)
	    # pending connections do not include connected remote terminals.
	        LoginGraceTime 30
	        LoginGraceTime 2m
	    # time to keep pending connections alive while waiting for authorization
	    # e.g., if someone do not enter password, the connection will cancelled.
	        
	Log
	        #LogLevel INFO
	        LogLevel VERBOSE  /var/log/auth.log
        
        Banner to give a bad guy a chuckle
                Banner /etc/issue.net  # only for SSH
                Banner /etc/issue  # both for SSH users  and local console login

        Restart ssh
                sudo restart ssh
                sudo systemctl restart ssh
key::
        RSA keys generation in local host, and install public key in ssh server

            ssh-keygen -t rsa [ -b 4096] -C "Debian"
            ssh-copy-id <username>@<host>   # copy ssh key if shh login to some terminal
            ssh-copy-id inray@192.20.16.1   # copy ssh key if shh login to some terminal

        When without ssh-copy-id command installed,

            ssh inray@192.20.16.1 "umask 077; test -d .ssh || mkdir .ssh"
            cat ~/.ssh/is_rsa.pub | ssh inray@192.20.16.1 "cat >> .ssh/authorized_keys"

        After delivery public key to remote server, test it by 

            ssh inray@192.20.16.1

        or copy a file by
            
            touch test.txt
            scp test.txt inray@192.20.16.1:/tmp/

change key::

        RSA key passphrase change
            
            ssh-keygen -p -f ~/.ssh/id_rsa

scp/sftp/rsync without passphrase entering::
    
            eval $(ssh-agent) 
            ssh-add
            ssh inray@192.20.16.1
            scp test.txt inray@192.20.16.1:/tmp/
            scp inray@Alienware:/etc/apt/sources.list ./sources.list (from Asus)

local ssh configuration::
            # .ssh/config

            Host Debian
                Hostname 192.20.16.1
                User inray
                Port 22
                ServerAliveInterval 10
            # ssh will send a keep-alive packet every 10 seconds, so then my connection
            # is only terminated by loss of network connection.

putty::
            + puttygen generate rsa-key pairs
            NOTE: in some case, putty complain that server refuse ..., you can change private keys from key-gen generation
            + save public/private keys in the same directory, important
            + copy public key and add into server file: /home/inray/.ssh/authorized_keys 
            + edit it into one line

            configuration
                + Host Name IP
                + connection/Data/Auto-login username
                + Connection/SSH/Auth/Private key file for authentication
                + Window/Appearance/Font

